/* Generated by Nim Compiler v1.4.6 */
/*   (c) 2017 Andreas Rumpf */
/* The generated code is subject to the original license. */
#ifndef __constantine_bls12_381__
#define __constantine_bls12_381__
#define NIM_INTBITS 64

/* section: NIM_merge_HEADERS */

#include "nimbase.h"
#undef LANGUAGE_C
#undef MIPSEB
#undef MIPSEL
#undef PPC
#undef R3000
#undef R4000
#undef i386
#undef linux
#undef mips
#undef near
#undef far
#undef powerpc
#undef unix

/* section: NIM_merge_FRAME_DEFINES */

/* section: NIM_merge_FORWARD_TYPES */
typedef struct bls12381_fr bls12381_fr;
typedef struct bls12381_fp bls12381_fp;

/* section: NIM_merge_TYPES */

/* section: NIM_merge_SEQ_TYPES */

/* section: NIM_merge_FIELD_INFO */

/* section: NIM_merge_TYPE_INFO */

/* section: NIM_merge_PROC_HEADERS */
N_LIB_PRIVATE N_NOCONV(void, signalHandler)(int sign);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fr_unmarshalBE)(bls12381_fr* dstX60gensym2_, NU8* srcX60gensym2_, NI srcX60gensym2_Len_0);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fr_marshalBE)(NU8* dstX60gensym2_, NI dstX60gensym2_Len_0, bls12381_fr* srcX60gensym2_);
N_LIB_IMPORT N_CDECL(NU64, ctt_bls12381_fr_is_eq)(bls12381_fr* aX60gensym2_, bls12381_fr* bX60gensym2_);
N_LIB_IMPORT N_CDECL(NU64, ctt_bls12381_fr_is_zero)(bls12381_fr* aX60gensym2_);
N_LIB_IMPORT N_CDECL(NU64, ctt_bls12381_fr_is_one)(bls12381_fr* aX60gensym2_);
N_LIB_IMPORT N_CDECL(NU64, ctt_bls12381_fr_is_minus_one)(bls12381_fr* aX60gensym2_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fr_set_zero)(bls12381_fr* aX60gensym2_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fr_set_one)(bls12381_fr* aX60gensym2_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fr_set_minus_one)(bls12381_fr* aX60gensym2_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fr_neg)(bls12381_fr* aX60gensym2_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fr_sum)(bls12381_fr* rX60gensym2_, bls12381_fr* aX60gensym2_, bls12381_fr* bX60gensym2_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fr_add_in_place)(bls12381_fr* aX60gensym2_, bls12381_fr* bX60gensym2_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fr_diff)(bls12381_fr* rX60gensym2_, bls12381_fr* aX60gensym2_, bls12381_fr* bX60gensym2_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fr_sub_in_place)(bls12381_fr* aX60gensym2_, bls12381_fr* bX60gensym2_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fr_double)(bls12381_fr* rX60gensym2_, bls12381_fr* aX60gensym2_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fr_double_in_place)(bls12381_fr* aX60gensym2_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fp_unmarshalBE)(bls12381_fp* dstX60gensym31_, NU8* srcX60gensym31_, NI srcX60gensym31_Len_0);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fp_marshalBE)(NU8* dstX60gensym31_, NI dstX60gensym31_Len_0, bls12381_fp* srcX60gensym31_);
N_LIB_IMPORT N_CDECL(NU64, ctt_bls12381_fp_is_eq)(bls12381_fp* aX60gensym31_, bls12381_fp* bX60gensym31_);
N_LIB_IMPORT N_CDECL(NU64, ctt_bls12381_fp_is_zero)(bls12381_fp* aX60gensym31_);
N_LIB_IMPORT N_CDECL(NU64, ctt_bls12381_fp_is_one)(bls12381_fp* aX60gensym31_);
N_LIB_IMPORT N_CDECL(NU64, ctt_bls12381_fp_is_minus_one)(bls12381_fp* aX60gensym31_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fp_set_zero)(bls12381_fp* aX60gensym31_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fp_set_one)(bls12381_fp* aX60gensym31_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fp_set_minus_one)(bls12381_fp* aX60gensym31_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fp_neg)(bls12381_fp* aX60gensym31_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fp_sum)(bls12381_fp* rX60gensym31_, bls12381_fp* aX60gensym31_, bls12381_fp* bX60gensym31_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fp_add_in_place)(bls12381_fp* aX60gensym31_, bls12381_fp* bX60gensym31_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fp_diff)(bls12381_fp* rX60gensym31_, bls12381_fp* aX60gensym31_, bls12381_fp* bX60gensym31_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fp_sub_in_place)(bls12381_fp* aX60gensym31_, bls12381_fp* bX60gensym31_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fp_double)(bls12381_fp* rX60gensym31_, bls12381_fp* aX60gensym31_);
N_LIB_IMPORT N_CDECL(void, ctt_bls12381_fp_double_in_place)(bls12381_fp* aX60gensym31_);

/* section: NIM_merge_DATA */

/* section: NIM_merge_VARS */

/* section: NIM_merge_PROCS */
N_LIB_IMPORT N_CDECL(void, NimMain)(void);
#endif /* __constantine_bls12_381__ */
